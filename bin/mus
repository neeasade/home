#!/bin/sh
# Music player thing.  The way I organise music means that I don't
# have to have any explicit playlist format file mess.
#
# The base directory is ~/med/mus.  Each artist gets a folder.  Each
# album gets their own folder.  If it has more than a single disc,
# they are labelled as D1, D2, and so on.
#
# I prefer to listen to albums in bulk so simply prompting to play an
# album when a mpv instance is already not running is good enough for
# my needs.

sock=/tmp/mussock
cmd="socat - $sock"

getprop(){
	printf '{"command":["get_property_string","%s"]}\n' "$1" |$cmd |{
		read -r out
		out="${out#*\"data\":\"}"
		echo "${out%%\"*}"
	}
}

setprop(){
	printf '{"command":["set_property","%s",%s]}\n' "$1" "$2" |$cmd
}

# Pause or play.
pause(){
	getprop pause |{
		read -r p
		case $p in
		no) setprop pause true ;;
		yes) setprop pause false ;;
		esac
	}
}

next(){
	echo '{"command":["playlist-next"]}' |$cmd
}

prev(){
	echo '{"command":["playlist-prev"]}' |$cmd
}

loop(){
	getprop loop-file |{
		read -r p
		case $p in
		no) setprop loop-file true ;;
		inf) setprop loop-file false ;;
		esac
	}
}

__current_file(){
	# I need -E or + doesn't work.  Very weird.  Hopefully the last
	# sed command doesn't bite me in the back in the future.  :P
	getprop path |{
		read -r path
		if [ $(__current_albumtotal) -eq 1 ]; then
			echo "${path%/*}"
		else
			echo "$path"
		fi
	} |sed -E -e "s|$HOME/med/mus/||" -e 'y/_/ /' -e 's|/|  ·  |g' -e 's/[0-9]+\.//'
}

__current_pause(){
	getprop pause |{
		read -r p
		[ $p = yes ] && echo "▷ "
	}
}

__current_now(){
	getprop time-pos |{
		read -r now
		now=${now%%.*}
		printf '%d:%02d\n' $((now/60)) $((now%60))
	}
}

__current_total(){
	getprop duration |{
		read -r total
		total=${total%%.*}
		printf '%d:%02d\n' $((total/60)) $((total%60))
	}
}

__current_albumtotal(){
	getprop playlist-count
}

__current_albumnow(){
	getprop playlist-pos
}

__current_albumpos(){
	__current_albumtotal |{
		read -r total
		[ $total -ne 1 ] &&
			echo "($(__current_albumnow)/$total)"
	}
}

current(){
	awesome-client <<EOF
local notify = require("naughty")
notify.notify{
	title = "currently playing:",
	text = "$(__current_pause)$(__current_albumpos) ($(__current_now)/$(__current_total)) $(__current_file)"
}
EOF
}

quit(){
	echo '{"command":["quit"]}' |$cmd
	rm $sock
}

:|$cmd || quit

if [ -S $sock ]; then
	if [ -z "$1" ]; then
		echo 'pause
next
prev
loop
current
quit' |menu sel |{
			read -r cmd
			[ -n "$cmd" ] && mus "$cmd"
		}
	else
		g=$1
		shift
		$g "$@"
	fi
else
	# GNU find time
	find $HOME/med/mus -type d -printf '%P\n' |menu sel |{
		read -r dir
		[ -n "$dir" ] &&
			mpv --no-video --input-ipc-server="$sock" "$HOME/med/mus/$dir"
	}
fi
